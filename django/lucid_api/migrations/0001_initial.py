# -*- coding: utf-8 -*-
# Generated by Django 1.11.9 on 2018-01-13 00:19
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import lucid_api.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Project Title')),
                ('is_archived', models.BooleanField(default=False, help_text='This will automatically archive all connected services.', verbose_name='Archived')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
            },
            bases=(lucid_api.models.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProjectType',
            fields=[
                ('character_code', models.CharField(max_length=1, primary_key=True, serialize=False, verbose_name='Character Code')),
                ('description', models.CharField(max_length=500, verbose_name='Project Type')),
            ],
            options={
                'verbose_name': 'Project Type',
            },
        ),
        migrations.CreateModel(
            name='ServiceConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(choices=[(b'dropbox_service', b'Dropbox'), (b'ftrack_service', b'ftrack'), (b'groups_service', b'Google Groups'), (b'slack_service', b'Slack'), (b'xero_service', b'Xero')], max_length=200, verbose_name='Service Name')),
                ('connection_name', models.CharField(blank=True, default='', help_text='Used by some connection types to differentiate multiple connections', max_length=200)),
                ('identifier', models.CharField(blank=True, help_text='If left blank, a new connection to this service will be created.', max_length=500)),
                ('is_messenger', models.BooleanField(default=False, help_text='If checked, this channel will receive all Lucid Control messages', verbose_name='Messenger Channel')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Archived')),
                ('state_message', models.CharField(blank=True, default='', max_length=1000, verbose_name='Status')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='lucid_api.Project')),
            ],
            options={
                'verbose_name': 'Service Connection',
            },
            bases=(lucid_api.models.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TemplateProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='TemplateServiceConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(choices=[(b'dropbox_service', b'Dropbox'), (b'ftrack_service', b'ftrack'), (b'groups_service', b'Google Groups'), (b'slack_service', b'Slack'), (b'xero_service', b'Xero')], max_length=200, verbose_name='Service Name')),
                ('connection_name', models.CharField(blank=True, default='', max_length=200)),
                ('is_messenger', models.BooleanField(default=False, verbose_name='Messenger Channel')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='lucid_api.TemplateProject')),
            ],
            options={
                'verbose_name': 'Template Project',
                'verbose_name_plural': 'Template Project',
            },
        ),
        migrations.AddField(
            model_name='project',
            name='type_code',
            field=models.ForeignKey(default='P', on_delete=django.db.models.deletion.CASCADE, to='lucid_api.ProjectType', verbose_name='Type'),
        ),
    ]
